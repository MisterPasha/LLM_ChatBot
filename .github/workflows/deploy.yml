name: Build & Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build_push_image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set image name
        id: meta_name
        run: |
          REPO_LC="$misterpasha/llm_chatbot"
          echo "IMAGE=ghcr.io/$misterpasha/llm_chatbot-app" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push (latest + sha)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta_name.outputs.IMAGE }}:latest
            ${{ steps.meta_name.outputs.IMAGE }}:${{ github.sha }}

  deploy_to_ec2:
    runs-on: ubuntu-latest
    needs: build_push_image
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}          
          key: ${{ secrets.EC2_SSH_KEY }}      
          envs: GITHUB_REPOSITORY,GITHUB_SHA,GHCR_USER,GHCR_PAT      
          script: |
            set -e
            cd ~/app

            # pull latest repo for updated compose files 
            git pull || true

            REPO_LC="$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')"
            APP_IMAGE="ghcr.io/${REPO_LC}-app:${GITHUB_SHA}"

            # pull + recreate only the app with the new image
            APP_IMAGE="$APP_IMAGE" docker compose -f docker-compose.prod.yml pull app || true
            APP_IMAGE="$APP_IMAGE" docker compose -f docker-compose.prod.yml up -d app

            # seed/refresh the model (no-op if already present)
            docker compose -f docker-compose.prod.yml exec -T ollama ollama pull llama3.2:1b || true

            docker compose -f docker-compose.prod.yml ps
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}